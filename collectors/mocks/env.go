// Code generated by MockGen. DO NOT EDIT.
// Source: env.go

// Package mock_collectors is a generated GoMock package.
package mock_collectors

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockEnvCollector is a mock of EnvCollector interface.
type MockEnvCollector struct {
	ctrl     *gomock.Controller
	recorder *MockEnvCollectorMockRecorder
}

// MockEnvCollectorMockRecorder is the mock recorder for MockEnvCollector.
type MockEnvCollectorMockRecorder struct {
	mock *MockEnvCollector
}

// NewMockEnvCollector creates a new mock instance.
func NewMockEnvCollector(ctrl *gomock.Controller) *MockEnvCollector {
	mock := &MockEnvCollector{ctrl: ctrl}
	mock.recorder = &MockEnvCollectorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEnvCollector) EXPECT() *MockEnvCollectorMockRecorder {
	return m.recorder
}

// CollectEnvVars mocks base method.
func (m *MockEnvCollector) CollectEnvVars() map[string]string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CollectEnvVars")
	ret0, _ := ret[0].(map[string]string)
	return ret0
}

// CollectEnvVars indicates an expected call of CollectEnvVars.
func (mr *MockEnvCollectorMockRecorder) CollectEnvVars() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CollectEnvVars", reflect.TypeOf((*MockEnvCollector)(nil).CollectEnvVars))
}
